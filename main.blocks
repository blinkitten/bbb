<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="D1Deg3}Aj:Aon~LTGo[`" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="dyv,o2YH[6*iK`xJbhXO" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Blinkit_driver {" line1="    /**" line2="     * BLINKIT initialize" line3="     */" line4="    //% blockId=&quot;BLINKIT_I2C_init&quot; block=&quot;初始化BLINKIT&quot;" line5="    //% weight=100 blockGap=8" line6="    //% parts=BLINKIT_I2C trackArgs=0" line7="    export function init() {" line8="        serial.redirect(" line9="            SerialPin.P8," line10="            SerialPin.P12," line11="            BaudRate.BaudRate9600" line12="        )" line13="    }" line14="" line15="" line16="    /**" line17="        * Sensor driver blocks" line18="        * @param Sensor which Sensor to turn on" line19="        * @param dir which direction to go" line20="        * @param speed how fast" line21="        */" line22="    //% blockId=Sensor_value" line23="    //% block=&quot;如果%SensorName|%PosNum|数据&gt; %Min&quot;" line24="    export function Sensor(SensorName: SensorName, PosNum: PosNum, Min: number): void {" line25="        const asciiCode = PosNum + 32; // ASCII码对应" line26="        const char = asciiToChar(asciiCode);" line27="        let projectInfo = &quot;7e30&quot; + char + &quot;#&quot;" line28="        serial.writeString(projectInfo);" line29="    }" line30="    /**" line31="            * Sensor driver blocks" line32="            * @param Sensor which Sensor to turn on" line33="            * @param dir which direction to go" line34="            * @param speed how fast" line35="            */" line36="    //% blockId=Sensor_value2" line37="    //% block=&quot;如果%SensorName|%PosNum|数据&lt; %Max&quot;" line38="    export function Sensor2(SensorName: SensorName, PosNum: PosNum, Max: number): void {" line39="        const asciiCode2 = PosNum + 32; // ASCII码对应" line40="        const char2 = asciiToChar(asciiCode2);" line41="        let projectInfo2 = &quot;7e30&quot; + char2 + &quot;#&quot;" line42="        serial.writeString(projectInfo2);" line43="    }" line44="" line45="    /**" line46="     * Returns the distance to an object in a range from 1 to 300 centimeters or up to 118 inch." line47="     * The maximum value is returned to indicate when no object was detected." line48="     * -1 is returned when the device is not connected." line49="     * @param unit unit of distance, eg: DistanceUnit.CM" line50="     */" line51="    //% blockId=&quot;Sensor_value3&quot;" line52="    //% block=&quot;获取%SensorName|%PosNum|数据&quot;" line53="    //% weight=60" line54="    export function Sensor3(SensorName: SensorName, PosNum: PosNum): string {" line55="        if (true) {" line56="            return &quot;1&quot;;" line57="        }" line58="        basic.pause(0); // yield to allow background processing when called in a tight loop" line59="        return &quot;2&quot;;" line60="    }" line61="" line62="" line63="" line64="" line65="" line66="" line67="" line68="" line69="    function asciiToChar(asciiCode: number): string {" line70="        // 使用String.fromCharCode方法将ASCII码转换为字符  " line71="        return String.fromCharCode(asciiCode);" line72="    }" line73="" line74="    export enum SensorName {" line75="        //% block=&quot;光敏电阻&quot;" line76="        Sensor0," line77="        //% block=&quot;按键&quot;" line78="        Sensor1," line79="        //% block=&quot;摇杆&quot;" line80="        Sensor2," line81="        //% block=&quot;旋钮电位器&quot;" line82="        Sensor3," line83="        //% block=&quot;推杆电位器&quot;" line84="        Sensor4," line85="        //% block=&quot;语音识别&quot;" line86="        Sensor5," line87="        //% block=&quot;倾斜&quot;" line88="        Sensor6," line89="        //% block=&quot;触摸&quot;" line90="        Sensor7," line91="        //% block=&quot;温湿度&quot;" line92="        Sensor8," line93="        //% block=&quot;激光测距&quot;" line94="        Sensor9," line95="        //% block=&quot;土壤湿度&quot;" line96="        Sensor10," line97="        //% block=&quot;手势&quot;" line98="        Sensor11," line99="    }" line100="" line101="    export enum Led8x8_DH2 {" line102="        //% block=&quot;向右&quot;" line103="        Right," line104="        //% block=&quot;向左&quot;" line105="        Left," line106="        //% block=&quot;变化&quot;" line107="        Change," line108="    }" line109="" line110="    export enum Led8x8_DH {" line111="        //% block=&quot;随机&quot;" line112="        DH2_1," line113="        //% block=&quot;环绕&quot;" line114="        DH2_2," line115="        //% block=&quot;折弯&quot;" line116="        DH2_3," line117="        //% block=&quot;扫描&quot;" line118="        DH2_4," line119="        //% block=&quot;直接&quot;" line120="        DH2_5," line121="    }" line122="    export enum LedRGB_DH {" line123="        //% block=&quot;无&quot;" line124="        Wu," line125="        //% block=&quot;渐变&quot;" line126="        Change," line127="    }" line128="" line129="    export enum Mp3_DH {" line130="        //% block=&quot;暂停&quot;" line131="        Mp3_DH0," line132="        //% block=&quot;播放&quot;" line133="        Mp3_DH1," line134="        //% block=&quot;下一曲&quot;" line135="        Mp3_DH2," line136="        //% block=&quot;上一曲&quot;" line137="        Mp3_DH3," line138="        //% block=&quot;Vol+&quot;" line139="        Mp3_DH4," line140="        //% block=&quot;Vol-&quot;" line141="        Mp3_DH5," line142="        //% block=&quot;OneStop&quot;" line143="        Mp3_DH6," line144="        //% block=&quot;单曲循环&quot;" line145="        Mp3_DH7," line146="        //% block=&quot;全局播放&quot;" line147="        Mp3_DH8," line148="        //% block=&quot;随机播放&quot;" line149="        Mp3_DH9," line150="    }" line151="" line152="    export enum Motor_DH {" line153="        //% block=&quot;正转&quot;" line154="        Right," line155="        //% block=&quot;反转&quot;" line156="        Left," line157="    }" line158="" line159="    export enum PosNum {" line160="        //%blockId=Led8x8_1" line161="        //% block=&quot;1&quot;" line162="        PosNum1," line163="        //%blockId=Led8x8_2" line164="        //% block=&quot;2&quot;" line165="        PosNum2," line166="        //%blockId=Led8x8_3" line167="        //% block=&quot;3&quot;" line168="        PosNum3," line169="        //%blockId=Led8x8_4" line170="        //% block=&quot;4&quot;" line171="        PosNum4," line172="        //%blockId=Led8x8_5" line173="        //% block=&quot;5&quot;" line174="        PosNum5," line175="        //%blockId=Led8x8_6" line176="        //% block=&quot;6&quot;" line177="        PosNum6," line178="        //%blockId=Led8x8_7" line179="        //% block=&quot;7&quot;" line180="        PosNum7," line181="        //%blockId=Led8x8_8" line182="        //% block=&quot;8&quot;" line183="        PosNum8," line184="        //%blockId=Led8x8_9" line185="        //% block=&quot;9&quot;" line186="        PosNum9," line187="    }" line188="" line189="" line190="    /**" line191="        * Led8x8 driver blocks" line192="        " line193="     * @param Led8x8 which Led8x8 to turn on" line194="     * @param dir which direction to go" line195="     * @param speed how fast" line196="        */" line197="    //% subcategory=&quot;8x8&quot;" line198="    //% blockId=Led8x8_off" line199="    //% block=&quot;8x8,位置%PosNum|,清空屏幕, 动画%Dh&quot;" line200="    export function Led8x8(PosNum: PosNum, Dh: Led8x8_DH): void {" line201="        const asciiCode3 = PosNum + 32; // ASCII码对应" line202="        const char3 = asciiToChar(asciiCode3);" line203="" line204="        let projectInfo3 = &quot;7e30&quot; + char3 + &quot;#&quot;" line205="        serial.writeString(projectInfo3);" line206="    }" line207="" line208="" line209="" line210="    /**" line211="    * Led8x8 driver blocks" line212="    " line213="    * @param Led8x8 which Led8x8 to turn on" line214="    * @param dir which direction to go" line215="    * @param speed how fast" line216="    * @param s is the text will be show, eg: 'Hello!'" line217="    */" line218="    //% subcategory=&quot;8x8&quot;" line219="    //% blockId=Led8x8_String" line220="    //% block=&quot;8x8,位置%PosNum|显示字符串%s|动画%Dh|速度 %speed&quot;" line221="    //% speed.min=1 speed.max=6" line222="    export function Led8x8_1(PosNum: PosNum, s: string, Dh: Led8x8_DH2, speed: number): void {" line223="        const asciiCode4 = PosNum + 32; // ASCII码对应" line224="        const char4 = asciiToChar(asciiCode4);" line225="" line226="        let projectInfo4 = &quot;7e30&quot; + char4 + &quot;#&quot;" line227="        serial.writeString(projectInfo4);" line228="" line229="    }" line230="" line231="    /**" line232="    * LedRGB driver blocks" line233="    " line234="    * @param LedRGB which Led8x8 to turn on" line235="    * @param dir which direction to go" line236="    * @param speed how fast" line237="    */" line238="    //% subcategory=&quot;LED_RGB&quot;" line239="    //% blockId=Led_RGB" line240="    //% block=&quot;LedRGB,位置%PosNum|颜色R %Red|G %Green|B %Blue|动画%Dh&quot;" line241="    //% speed.min=1 speed.max=6" line242="    //% Red.min=0 Red.max=255" line243="    //% Green.min=0 Green.max=255" line244="    //% Blue.min=0 Blue.max=255" line245="    export function LedRGB(PosNum: PosNum, Red: number, Green: number, Blue: number, Dh: LedRGB_DH): void {" line246="" line247="" line248="" line249="        const asciiCode5 = PosNum + 32; // ASCII码对应" line250="        const char5 = asciiToChar(asciiCode5);" line251="" line252="        let projectInfo5 = &quot;7e30&quot; + char5 + &quot;#&quot;" line253="        serial.writeString(projectInfo5);" line254="" line255="    }" line256="" line257="    /**" line258="    * Mp3 driver blocks" line259="    * @param Mp3 which Led8x8 to turn on" line260="    * @param dir which direction to go" line261="    * @param speed how fast" line262="    */" line263="    //% subcategory=&quot;Mp3&quot;" line264="    //% blockId=Mp3" line265="    //% block=&quot;Mp3,位置%PosNum|动画%Dh&quot;" line266="    export function Mp3(PosNum: PosNum, Dh: Mp3_DH): void {" line267="        const asciiCode6 = PosNum + 32; // ASCII码对应" line268="        const char6 = asciiToChar(asciiCode6);" line269="        let projectInfo6 = &quot;7e30&quot; + char6 + &quot;#&quot;" line270="        serial.writeString(projectInfo6);" line271="    }" line272="" line273="    /**" line274="    * Mp3 driver blocks" line275="    * @param Mp3 which Led8x8 to turn on" line276="    * @param dir which direction to go" line277="    * @param speed how fast" line278="    */" line279="    //% subcategory=&quot;Mp3&quot;" line280="    //% blockId=Mp3_2" line281="    //% block=&quot;Mp3,位置%PosNum|设置音量%Vol&quot;" line282="    //% Vol.min=0 Vol.max=28" line283="    export function Mp3_2(PosNum: PosNum, Vol: number): void {" line284="        const asciiCode7 = PosNum + 32; // ASCII码对应" line285="        const char7 = asciiToChar(asciiCode7);" line286="        let projectInfo7 = &quot;7e30&quot; + char7 + &quot;#&quot;" line287="        serial.writeString(projectInfo7);" line288="    }" line289="" line290="    /**" line291="* Mp3 driver blocks" line292="* @param Mp3 which Led8x8 to turn on" line293="* @param dir which direction to go" line294="* @param speed how fast" line295="*/" line296="    //% subcategory=&quot;Mp3&quot;" line297="    //% blockId=Mp3_3" line298="    //% block=&quot;Mp3,位置%PosNum|播放第 %Xq|首&quot;" line299="    //% Xq.min=1 Xq.max=10" line300="    export function Mp3_3(PosNum: PosNum, Xq: number): void {" line301="        const asciiCode8 = PosNum + 32; // ASCII码对应" line302="        const char8 = asciiToChar(asciiCode8);" line303="        let projectInfo8 = &quot;7e30&quot; + char8 + &quot;#&quot;" line304="        serial.writeString(projectInfo8);" line305="    }" line306="    /**" line307="        * Servo driver blocks" line308="        " line309="        * @param Servo_1 which Servo_1 to turn on" line310="        * @param dir which direction to go" line311="        * @param speed how fast" line312="        */" line313="    //% subcategory=&quot;Servo&quot;" line314="    //% blockId=Servo" line315="    //% block=&quot;180舵机,位置%PosNum|转到%Sc|速度 %speed&quot;" line316="    //% Sc.min=0 Sc.max=180" line317="    //% speed.min=1 speed.max=10" line318="    export function Servo_360(PosNum: PosNum, Sc: number, speed: number): void {" line319="        const asciiCode9 = PosNum + 32; // ASCII码对应" line320="        const char9 = asciiToChar(asciiCode9);" line321="        let projectInfo9 = &quot;7e30&quot; + char9 + &quot;#&quot;" line322="        serial.writeString(projectInfo9);" line323="    }" line324="" line325="    /**" line326="        * Servo driver blocks" line327="        " line328="        * @param Led8x8 which Led8x8 to turn on" line329="        * @param dir which direction to go" line330="        * @param speed how fast" line331="        */" line332="    //% subcategory=&quot;Servo&quot;" line333="    //% blockId=Servo_2" line334="    //% block=&quot;360舵机,位置%PosNum|pwm%Sc|速度 %speed&quot;" line335="    //% Sc.min=0 Sc.max=180" line336="    //% speed.min=1 speed.max=10" line337="    export function Servo_180(PosNum: PosNum, Sc: number, speed: number): void {" line338="        const asciiCode10 = PosNum + 32; // ASCII码对应" line339="        const char10 = asciiToChar(asciiCode10);" line340="        let projectInfo10 = &quot;7e30&quot; + char10 + &quot;#&quot;" line341="        serial.writeString(projectInfo10);" line342="    }" line343="" line344="    /**" line345="        * Motorx1 driver blocks" line346="        " line347="        * @param Motorx1 which Motorx1 to turn on" line348="        * @param dir which direction to go" line349="        * @param speed how fast" line350="        */" line351="    //% subcategory=&quot;Motor&quot;" line352="    //% blockId=Motorx1" line353="    //% block=&quot;直流电机,位置%PosNum|转动方向%dir|速度 %speed&quot;" line354="    //% speed.min=0 speed.max=255" line355="    export function Motorx1(PosNum: PosNum, dir: Motor_DH, speed: number): void {" line356="        const asciiCode11 = PosNum + 32; // ASCII码对应" line357="        const char11 = asciiToChar(asciiCode11);" line358="        let projectInfo11 = &quot;7e30&quot; + char11 + &quot;#&quot;" line359="        serial.writeString(projectInfo11);" line360="    }" line361="}" numlines="362"></mutation></block></statement></block></xml>